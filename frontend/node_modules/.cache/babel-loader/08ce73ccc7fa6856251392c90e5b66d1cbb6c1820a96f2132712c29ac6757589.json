{"ast":null,"code":"var _jsxFileName = \"/home/george-joseph/vscode/leaflet/frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport Sidebar from './Sidebar'; // We'll create this component next\nimport './Map.css'; // Your styling for the map\n\n// Example toilets data (you can fetch this from your API)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toilets = [{\n  id: 1,\n  name: 'Toilet 1',\n  latitude: 28.6139,\n  longitude: 77.2090,\n  address: 'Delhi, India',\n  is_accessible: true,\n  is_free: false\n}, {\n  id: 2,\n  name: 'Toilet 2',\n  latitude: 28.6140,\n  longitude: 77.2100,\n  address: 'Delhi, India',\n  is_accessible: false,\n  is_free: true\n}];\nconst Map = () => {\n  _s();\n  const [selectedToilet, setSelectedToilet] = useState(null);\n\n  // Handle marker click to show sidebar\n  const handleMarkerClick = toilet => {\n    setSelectedToilet(toilet);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [28.6139, 77.2090],\n      zoom: 13,\n      style: {\n        width: '100%',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), toilets.map(toilet => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [toilet.latitude, toilet.longitude],\n        eventHandlers: {\n          click: () => handleMarkerClick(toilet)\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: toilet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, toilet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), selectedToilet && /*#__PURE__*/_jsxDEV(Sidebar, {\n      toilet: selectedToilet,\n      onClose: () => setSelectedToilet(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"sIvqJTnxmsIVW7IKSEwc66a3qw0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","useMapEvents","L","Sidebar","jsxDEV","_jsxDEV","toilets","id","name","latitude","longitude","address","is_accessible","is_free","Map","_s","selectedToilet","setSelectedToilet","handleMarkerClick","toilet","className","children","center","zoom","style","width","height","url","fileName","_jsxFileName","lineNumber","columnNumber","map","position","eventHandlers","click","onClose","_c","$RefreshReg$"],"sources":["/home/george-joseph/vscode/leaflet/frontend/src/Map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport Sidebar from './Sidebar'; // We'll create this component next\nimport './Map.css';  // Your styling for the map\n\n// Example toilets data (you can fetch this from your API)\nconst toilets = [\n  {\n    id: 1,\n    name: 'Toilet 1',\n    latitude: 28.6139,\n    longitude: 77.2090,\n    address: 'Delhi, India',\n    is_accessible: true,\n    is_free: false,\n  },\n  {\n    id: 2,\n    name: 'Toilet 2',\n    latitude: 28.6140,\n    longitude: 77.2100,\n    address: 'Delhi, India',\n    is_accessible: false,\n    is_free: true,\n  },\n];\n\nconst Map = () => {\n  const [selectedToilet, setSelectedToilet] = useState(null);\n\n  // Handle marker click to show sidebar\n  const handleMarkerClick = (toilet) => {\n    setSelectedToilet(toilet);\n  };\n\n  return (\n    <div className=\"map-container\">\n      <MapContainer center={[28.6139, 77.2090]} zoom={13} style={{ width: '100%', height: '100vh' }}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        {toilets.map((toilet) => (\n          <Marker\n            key={toilet.id}\n            position={[toilet.latitude, toilet.longitude]}\n            eventHandlers={{\n              click: () => handleMarkerClick(toilet),\n            }}\n          >\n            <Popup>{toilet.name}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n\n      {/* Sidebar to display details of the selected toilet */}\n      {selectedToilet && <Sidebar toilet={selectedToilet} onClose={() => setSelectedToilet(null)} />}\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,QAAQ,eAAe;AACpF,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAO,WAAW,CAAC,CAAE;;AAErB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,CACd;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE,OAAO;EAClBC,OAAO,EAAE,cAAc;EACvBC,aAAa,EAAE,IAAI;EACnBC,OAAO,EAAE;AACX,CAAC,EACD;EACEN,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE,OAAO;EAClBC,OAAO,EAAE,cAAc;EACvBC,aAAa,EAAE,KAAK;EACpBC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMsB,iBAAiB,GAAIC,MAAM,IAAK;IACpCF,iBAAiB,CAACE,MAAM,CAAC;EAC3B,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhB,OAAA,CAACR,YAAY;MAACyB,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAL,QAAA,gBAC5FhB,OAAA,CAACP,SAAS;QAAC6B,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrEzB,OAAO,CAAC0B,GAAG,CAAEb,MAAM,iBAClBd,OAAA,CAACN,MAAM;QAELkC,QAAQ,EAAE,CAACd,MAAM,CAACV,QAAQ,EAAEU,MAAM,CAACT,SAAS,CAAE;QAC9CwB,aAAa,EAAE;UACbC,KAAK,EAAEA,CAAA,KAAMjB,iBAAiB,CAACC,MAAM;QACvC,CAAE;QAAAE,QAAA,eAEFhB,OAAA,CAACL,KAAK;UAAAqB,QAAA,EAAEF,MAAM,CAACX;QAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,GANvBZ,MAAM,CAACZ,EAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOR,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC,EAGdf,cAAc,iBAAIX,OAAA,CAACF,OAAO;MAACgB,MAAM,EAAEH,cAAe;MAACoB,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAAC,IAAI;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEV,CAAC;AAAChB,EAAA,CA7BID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}