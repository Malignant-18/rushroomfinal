{"ast":null,"code":"var _jsxFileName = \"/home/george-joseph/vscode/leaflet/frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultPosition = [51.505, -0.09]; // Default map position (London)\nconst defaultZoom = 13;\nexport default function Map() {\n  _s();\n  const [toilets, setToilets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchToilets() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/list');\n        const data = await response.json();\n        setToilets(data);\n      } catch (error) {\n        console.error('Error fetching toilet data:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchToilets();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: defaultPosition,\n      zoom: defaultZoom,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), toilets.map(toilet => {\n        var _toilet$coordinates, _toilet$coordinates2;\n        if ((_toilet$coordinates = toilet.coordinates) !== null && _toilet$coordinates !== void 0 && _toilet$coordinates.lat && (_toilet$coordinates2 = toilet.coordinates) !== null && _toilet$coordinates2 !== void 0 && _toilet$coordinates2.lng) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [toilet.coordinates.lat, toilet.coordinates.lng],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: toilet.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: toilet.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Condition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 23\n                  }, this), \" \", toilet.condition]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Facilities:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 23\n                  }, this), ' ', toilet.facilities ? `${toilet.facilities.baby_changing ? 'Baby Changing Station, ' : ''}${toilet.facilities.wheelchair_accessible ? 'Wheelchair Accessible' : ''}`.trim() : 'None']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, toilet.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        } else {\n          console.warn(`Toilet with ID ${toilet.id} is missing valid coordinates.`);\n          return null;\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"JJAY9bJZmcGyc8paIfDJ02zzqog=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","defaultPosition","defaultZoom","Map","_s","toilets","setToilets","loading","setLoading","fetchToilets","response","fetch","data","json","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","center","zoom","url","attribution","map","toilet","_toilet$coordinates","_toilet$coordinates2","coordinates","lat","lng","position","name","location","condition","facilities","baby_changing","wheelchair_accessible","trim","id","warn","_c","$RefreshReg$"],"sources":["/home/george-joseph/vscode/leaflet/frontend/src/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst defaultPosition = [51.505, -0.09]; // Default map position (London)\nconst defaultZoom = 13;\n\nexport default function Map() {\n  const [toilets, setToilets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchToilets() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/list');\n        const data = await response.json();\n        setToilets(data);\n      } catch (error) {\n        console.error('Error fetching toilet data:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchToilets();\n  }, []);\n\n  if (loading) {\n    return (\n      <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n        <h2>Loading map...</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      <MapContainer center={defaultPosition} zoom={defaultZoom} style={{ height: '100%', width: '100%' }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n\n        {toilets.map((toilet) => {\n          if (toilet.coordinates?.lat && toilet.coordinates?.lng) {\n            return (\n              <Marker key={toilet.id} position={[toilet.coordinates.lat, toilet.coordinates.lng]}>\n                <Popup>\n                  <div>\n                    <h3>{toilet.name}</h3>\n                    <p>{toilet.location}</p>\n                    <p>\n                      <strong>Condition:</strong> {toilet.condition}\n                    </p>\n                    <p>\n                      <strong>Facilities:</strong>{' '}\n                      {toilet.facilities\n                        ? `${toilet.facilities.baby_changing ? 'Baby Changing Station, ' : ''}${\n                            toilet.facilities.wheelchair_accessible ? 'Wheelchair Accessible' : ''\n                          }`.trim()\n                        : 'None'}\n                    </p>\n                  </div>\n                </Popup>\n              </Marker>\n            );\n          } else {\n            console.warn(`Toilet with ID ${toilet.id} is missing valid coordinates.`);\n            return null;\n          }\n        })}\n      </MapContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}