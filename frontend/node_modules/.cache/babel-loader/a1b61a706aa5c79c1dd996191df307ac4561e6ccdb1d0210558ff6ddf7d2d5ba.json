{"ast":null,"code":"var _jsxFileName = \"/home/george-joseph/vscode/leaflet/frontend/src/components/Map.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport Sidebar from \"./Sidebar\";\nimport RecenterMap from \"./RecenterMap\";\nimport \"./Map.css\";\nimport Filter from \"./Filter\";\n\n// Fix Leaflet marker icon issues\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\"\n});\nexport default function Map() {\n  _s();\n  const [toilets, setToilets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedToilet, setSelectedToilet] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [location, setLocation] = useState([9.965579, 76.24275]);\n  const [userMarker, setUserMarker] = useState(null);\n  useEffect(() => {\n    async function fetchToilets() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/api/list\");\n        if (!response.ok) throw new Error(\"Failed to fetch toilets.\");\n        const data = await response.json();\n        setToilets(data);\n      } catch (error) {\n        console.error(\"Error fetching toilets:\", error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchToilets();\n  }, []);\n  const handleViewDetails = toilet => {\n    setSelectedToilet(toilet);\n    setIsSidebarOpen(true);\n  };\n  const handleFetchLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const currentLocation = [position.coords.latitude, position.coords.longitude];\n      setLocation(currentLocation);\n      setUserMarker(currentLocation);\n    }, error => {\n      console.error(\"Error fetching location:\", error.message);\n      alert(\"Unable to fetch location. Please check your permissions.\");\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"location-btn\",\n        onClick: handleFetchLocation,\n        children: \"Get My Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: location,\n        zoom: 15,\n        className: \"leaflet-map\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), toilets.map(toilet => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [toilet.coordinates.lat, toilet.coordinates.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popup-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: toilet.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: toilet.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleViewDetails(toilet),\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, toilet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)), userMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userMarker,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RecenterMap, {\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      toilet: selectedToilet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: () => setIsSidebarOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"4XrU1TyNKmxpQa403ceAeyIrYVk=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","useEffect","useState","L","Sidebar","RecenterMap","Filter","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Map","_s","toilets","setToilets","loading","setLoading","selectedToilet","setSelectedToilet","isSidebarOpen","setIsSidebarOpen","location","setLocation","userMarker","setUserMarker","fetchToilets","response","fetch","ok","Error","data","json","error","console","message","handleViewDetails","toilet","handleFetchLocation","navigator","geolocation","alert","getCurrentPosition","position","currentLocation","coords","latitude","longitude","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","url","attribution","map","coordinates","lat","lng","name","id","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/george-joseph/vscode/leaflet/frontend/src/components/Map.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport Sidebar from \"./Sidebar\";\nimport RecenterMap from \"./RecenterMap\";\n\nimport \"./Map.css\";\nimport Filter from \"./Filter\";\n\n// Fix Leaflet marker icon issues\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n});\n\nexport default function Map() {\n  const [toilets, setToilets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedToilet, setSelectedToilet] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [location, setLocation] = useState([9.965579, 76.24275]);\n  const [userMarker, setUserMarker] = useState(null);\n\n  useEffect(() => {\n    async function fetchToilets() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/api/list\");\n        if (!response.ok) throw new Error(\"Failed to fetch toilets.\");\n        const data = await response.json();\n        setToilets(data);\n      } catch (error) {\n        console.error(\"Error fetching toilets:\", error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchToilets();\n  }, []);\n\n  const handleViewDetails = (toilet) => {\n    setSelectedToilet(toilet);\n    setIsSidebarOpen(true);\n  };\n\n  const handleFetchLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const currentLocation = [position.coords.latitude, position.coords.longitude];\n        setLocation(currentLocation);\n        setUserMarker(currentLocation);\n      },\n      (error) => {\n        console.error(\"Error fetching location:\", error.message);\n        alert(\"Unable to fetch location. Please check your permissions.\");\n      }\n    );\n  };\n\n  if (loading) {\n    return <div className=\"loading-container\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"map-page\">\n      <div>\n        <Filter/>\n      </div>\n      <div className=\"map-controls\">\n        <button className=\"location-btn\" onClick={handleFetchLocation}>\n          Get My Location\n        </button>\n      </div>\n      \n      <div className=\"map-container\">\n        <MapContainer center={location} zoom={15} className=\"leaflet-map\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n\n          {toilets.map((toilet) => (\n            <Marker key={toilet.id} position={[toilet.coordinates.lat, toilet.coordinates.lng]}>\n              <Popup>\n                <div className=\"popup-content\">\n                  <h3>{toilet.name}</h3>\n                  <p>{toilet.location}</p>\n                  <button onClick={() => handleViewDetails(toilet)}>\n                    View Details\n                  </button>\n                </div>\n              </Popup>\n            </Marker>\n          ))}\n\n          {userMarker && (\n            <Marker position={userMarker}>\n              <Popup>Your current location</Popup>\n            </Marker>\n          )}\n\n          <RecenterMap location={location} />\n        </MapContainer>\n      </div>\n\n      <Sidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        toilet={selectedToilet}\n      />\n      \n      {isSidebarOpen && (\n        <div className=\"overlay\" onClick={() => setIsSidebarOpen(false)} />\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}