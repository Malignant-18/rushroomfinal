{"ast":null,"code":"const fetchRushroom = async () => {\n  const {\n    data,\n    error\n  } = await supabase.from(\"toilets\").select();\n  if (error) {\n    console.error(\"Supabase Fetch Error:\", error);\n    return [];\n  }\n\n  // Filter out entries without valid coordinates\n  const validToilets = data.filter(toilet => toilet.latitude && toilet.longitude);\n  console.log(\"Valid Toilets:\", validToilets);\n  return validToilets;\n};","map":{"version":3,"names":["fetchRushroom","data","error","supabase","from","select","console","validToilets","filter","toilet","latitude","longitude","log"],"sources":["/home/george-joseph/vscode/leaflet/frontend/src/backend/rushroom.js"],"sourcesContent":["const fetchRushroom = async () => {\n    const { data, error } = await supabase\n        .from(\"toilets\")\n        .select();\n\n    if (error) {\n        console.error(\"Supabase Fetch Error:\", error);\n        return [];\n    }\n\n    // Filter out entries without valid coordinates\n    const validToilets = data.filter(toilet => \n        toilet.latitude && toilet.longitude\n    );\n\n    console.log(\"Valid Toilets:\", validToilets);\n    return validToilets;\n};"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMC,QAAQ,CACjCC,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,CAAC;EAEb,IAAIH,KAAK,EAAE;IACPI,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACb;;EAEA;EACA,MAAMK,YAAY,GAAGN,IAAI,CAACO,MAAM,CAACC,MAAM,IACnCA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACE,SAC9B,CAAC;EAEDL,OAAO,CAACM,GAAG,CAAC,gBAAgB,EAAEL,YAAY,CAAC;EAC3C,OAAOA,YAAY;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}